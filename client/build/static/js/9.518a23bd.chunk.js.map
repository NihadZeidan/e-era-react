{"version":3,"sources":["components/checkout-item/checkoutItem.component.js","components/stripe-button/stripeButton.component.js","pages/checkout/checkout.component.js"],"names":["CheckoutItem","cartItem","imageUrl","price","name","quantity","dispatch","useDispatch","className","src","alt","onClick","removeItem","addItem","clearItem","StripeCheckoutButton","priceForStripe","billingAddress","shippingAddress","amount","label","currency","description","panelLabel","token","axios","post","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","CheckoutPage","total","useSelector","state","selectCartTotal","cartItems","selectCartItems","map","id"],"mappings":"yNAoCeA,EAjCM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SACzBC,EAAWC,cACjB,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKC,IAAKP,EAAUQ,IAAI,WAG1B,sBAAMF,UAAU,OAAhB,SAAwBJ,IACxB,uBAAMI,UAAU,WAAhB,UACE,qBAAKA,UAAU,QAAQG,QAAS,kBAAML,EAASM,YAAWX,KAA1D,oBAGA,uBAAMO,UAAU,QAAhB,cAA0BH,EAA1B,OACA,qBAAKG,UAAU,QAAQG,QAAS,kBAAML,EAASO,YAAQZ,KAAvD,uBAKF,uBAAMO,UAAU,QAAhB,cAA0BL,KAG1B,qBACEK,UAAU,gBACVG,QAAS,kBAAML,EAASQ,YAAUb,KAFpC,SAIE,gD,oCCWOc,EAtCc,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MAExBa,EAAyB,IAARb,EAoBvB,OACE,cAAC,IAAD,CACEc,gBAAc,EACdC,iBAAe,EACfC,OAAQH,EACRI,MAAM,UACNhB,KAAK,sBACLiB,SAAS,MACTC,YAAW,yBAAoBnB,GAC/BoB,WAAW,UACXC,MAxBY,SAACA,GACfC,IACGC,KAAK,WAAY,CAAEP,OAAQH,EAAgBQ,UAC3CG,MAAK,SAACC,GACLC,MAAM,yBAEPC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBC,KAAKC,MAAMJ,IAC1CF,MACE,gGAgBJO,UA3BF,iHC0CWC,UA5CM,WACnB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWC,YAAgBD,MAC/CE,EAAYH,aAAY,SAACC,GAAD,OAAWG,YAAgBH,MACzD,OACE,sBAAKhC,UAAU,gBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,6CAEF,qBAAKA,UAAU,eAAf,SACE,iDAEF,qBAAKA,UAAU,eAAf,SACE,8CAEF,qBAAKA,UAAU,eAAf,SACE,2CAEF,qBAAKA,UAAU,eAAf,SACE,+CAGHkC,EAAUE,KAAI,SAAC3C,GAAD,OACb,cAAC,EAAD,CAAc4C,GAAI5C,EAAS4C,GAAI5C,SAAUA,OAG3C,qBAAKO,UAAU,QAAf,SACE,4CAAe8B,OAGjB,sBAAK9B,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,qEAEE,uBAFF,2DAKA,8BACE,cAAC,EAAD,CAAsBL,MAAOmC","file":"static/js/9.518a23bd.chunk.js","sourcesContent":["import \"./checkoutItem.styles.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { clearItem, removeItem, addItem } from \"../../redux/cart/cart.actions\";\nconst CheckoutItem = ({ cartItem }) => {\n  const { imageUrl, price, name, quantity } = cartItem;\n  const dispatch = useDispatch();\n  return (\n    <div className=\"checkout-item\">\n      <div className=\"image-container\">\n        <img src={imageUrl} alt=\"item\" />\n      </div>\n\n      <span className=\"name\">{name}</span>\n      <span className=\"quantity\">\n        <div className=\"arrow\" onClick={() => dispatch(removeItem(cartItem))}>\n          &#10094;\n        </div>\n        <span className=\"value\"> {quantity} </span>\n        <div className=\"arrow\" onClick={() => dispatch(addItem(cartItem))}>\n          &#10095;\n        </div>\n      </span>\n\n      <span className=\"price\">${price}</span>\n\n      {/* Note how I made a new component for each item so I pass the whole item as props and delete or add it to the array easily  */}\n      <div\n        className=\"remove-button\"\n        onClick={() => dispatch(clearItem(cartItem))}\n      >\n        <span>&#x2718;</span>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutItem;\n","import StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  // We need to convert the price to cents accourdnig to Stripe API\n  const priceForStripe = price * 100;\n\n  //   This key to be used for the Stripe API to connect my app with my Stripe Account.\n  const publishableKey =\n    \"pk_test_51JzLTSHwqUbMWz7msO9wZmg23dbcFpstWu3gMSKVGIBBUCS6a1KOu1KAMeSJkqfnlrLh7AQbS9A2BrBr6HDY4lfR00yNVyjKY3\";\n\n  const onToken = (token) => {\n    axios\n      .post(\"/payment\", { amount: priceForStripe, token })\n      .then((response) => {\n        alert(\"Payment Successful\");\n      })\n      .catch((error) => {\n        console.log(\"Payment error: \", JSON.parse(error));\n        alert(\n          \"There was an issue with your payment. Please make sure you use the provided credit card.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      billingAddress\n      shippingAddress\n      amount={priceForStripe}\n      label=\"Pay Now\"\n      name=\"Electronic Era Ltd.\"\n      currency=\"usd\"\n      description={`Your total is $${price}`}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import \"./checkout.styles.scss\";\nimport { useSelector } from \"react-redux\";\nimport { selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport CheckoutItem from \"../../components/checkout-item/checkoutItem.component\";\nimport StripeCheckoutButton from \"../../components/stripe-button/stripeButton.component\";\n\nconst CheckoutPage = () => {\n  const total = useSelector((state) => selectCartTotal(state));\n  const cartItems = useSelector((state) => selectCartItems(state));\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"checkout-header\">\n        <div className=\"header-block\">\n          <span>Product</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Discription</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Quantity</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Price</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Remove</span>\n        </div>\n      </div>\n      {cartItems.map((cartItem) => (\n        <CheckoutItem id={cartItem.id} cartItem={cartItem} />\n      ))}\n\n      <div className=\"total\">\n        <span>Total: ${total}</span>\n      </div>\n\n      <div className=\"payment-section\">\n        <div className=\"test-warning\">\n          *Please use the following test credit card for payments*\n          <br />\n          5555 5555 5555 4444 - Exp: Any Future Date - CVV: 023\n        </div>\n        <div>\n          <StripeCheckoutButton price={total} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n"],"sourceRoot":""}